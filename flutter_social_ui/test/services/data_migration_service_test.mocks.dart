// Mocks generated by Mockito 5.4.6 from annotations
// in quanta/test/services/data_migration_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:quanta/models/user_model.dart' as _i3;
import 'package:quanta/services/auth_service.dart' as _i4;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFunctionsClient_2 extends _i1.SmartFake
    implements _i2.FunctionsClient {
  _FakeFunctionsClient_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseStorageClient_3 extends _i1.SmartFake
    implements _i2.SupabaseStorageClient {
  _FakeSupabaseStorageClient_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeClient_4 extends _i1.SmartFake
    implements _i2.RealtimeClient {
  _FakeRealtimeClient_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestClient_5 extends _i1.SmartFake
    implements _i2.PostgrestClient {
  _FakePostgrestClient_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueClient_6 extends _i1.SmartFake implements _i2.GoTrueClient {
  _FakeGoTrueClient_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQueryBuilder_7 extends _i1.SmartFake
    implements _i2.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQuerySchema_8 extends _i1.SmartFake
    implements _i2.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestFilterBuilder_9<T1> extends _i1.SmartFake
    implements _i2.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeChannel_10 extends _i1.SmartFake
    implements _i2.RealtimeChannel {
  _FakeRealtimeChannel_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i4.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SupabaseClient get supabase =>
      (super.noSuchMethod(
            Invocation.getter(#supabase),
            returnValue: _FakeSupabaseClient_0(
              this,
              Invocation.getter(#supabase),
            ),
          )
          as _i2.SupabaseClient);

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserModel> signUp({
    required String? email,
    required String? password,
    required String? username,
    String? displayName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #password: password,
              #username: username,
              #displayName: displayName,
            }),
            returnValue: _i5.Future<_i3.UserModel>.value(
              _FakeUserModel_1(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #password: password,
                  #username: username,
                  #displayName: displayName,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.UserModel>);

  @override
  _i5.Future<_i3.UserModel> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<_i3.UserModel>.value(
              _FakeUserModel_1(
                this,
                Invocation.method(#signIn, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.UserModel>);

  @override
  _i5.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resetPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [email]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserModel> updateProfile({
    String? username,
    String? displayName,
    String? profileImageUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #username: username,
              #displayName: displayName,
              #profileImageUrl: profileImageUrl,
            }),
            returnValue: _i5.Future<_i3.UserModel>.value(
              _FakeUserModel_1(
                this,
                Invocation.method(#updateProfile, [], {
                  #username: username,
                  #displayName: displayName,
                  #profileImageUrl: profileImageUrl,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.UserModel>);

  @override
  _i5.Future<bool> hasCompletedOnboarding() =>
      (super.noSuchMethod(
            Invocation.method(#hasCompletedOnboarding, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> markOnboardingCompleted() =>
      (super.noSuchMethod(
            Invocation.method(#markOnboardingCompleted, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserModel?> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i5.Future<_i3.UserModel?>.value(),
          )
          as _i5.Future<_i3.UserModel?>);
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i2.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FunctionsClient get functions =>
      (super.noSuchMethod(
            Invocation.getter(#functions),
            returnValue: _FakeFunctionsClient_2(
              this,
              Invocation.getter(#functions),
            ),
          )
          as _i2.FunctionsClient);

  @override
  _i2.SupabaseStorageClient get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeSupabaseStorageClient_3(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i2.SupabaseStorageClient);

  @override
  _i2.RealtimeClient get realtime =>
      (super.noSuchMethod(
            Invocation.getter(#realtime),
            returnValue: _FakeRealtimeClient_4(
              this,
              Invocation.getter(#realtime),
            ),
          )
          as _i2.RealtimeClient);

  @override
  _i2.PostgrestClient get rest =>
      (super.noSuchMethod(
            Invocation.getter(#rest),
            returnValue: _FakePostgrestClient_5(this, Invocation.getter(#rest)),
          )
          as _i2.PostgrestClient);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  _i2.GoTrueClient get auth =>
      (super.noSuchMethod(
            Invocation.getter(#auth),
            returnValue: _FakeGoTrueClient_6(this, Invocation.getter(#auth)),
          )
          as _i2.GoTrueClient);

  @override
  set functions(_i2.FunctionsClient? _functions) => super.noSuchMethod(
    Invocation.setter(#functions, _functions),
    returnValueForMissingStub: null,
  );

  @override
  set storage(_i2.SupabaseStorageClient? _storage) => super.noSuchMethod(
    Invocation.setter(#storage, _storage),
    returnValueForMissingStub: null,
  );

  @override
  set realtime(_i2.RealtimeClient? _realtime) => super.noSuchMethod(
    Invocation.setter(#realtime, _realtime),
    returnValueForMissingStub: null,
  );

  @override
  set rest(_i2.PostgrestClient? _rest) => super.noSuchMethod(
    Invocation.setter(#rest, _rest),
    returnValueForMissingStub: null,
  );

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
    Invocation.setter(#headers, headers),
    returnValueForMissingStub: null,
  );

  @override
  _i2.SupabaseQueryBuilder from(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#from, [table]),
            returnValue: _FakeSupabaseQueryBuilder_7(
              this,
              Invocation.method(#from, [table]),
            ),
          )
          as _i2.SupabaseQueryBuilder);

  @override
  _i2.SupabaseQuerySchema schema(String? schema) =>
      (super.noSuchMethod(
            Invocation.method(#schema, [schema]),
            returnValue: _FakeSupabaseQuerySchema_8(
              this,
              Invocation.method(#schema, [schema]),
            ),
          )
          as _i2.SupabaseQuerySchema);

  @override
  _i2.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
    dynamic get = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            returnValue: _FakePostgrestFilterBuilder_9<T>(
              this,
              Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            ),
          )
          as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.RealtimeChannel channel(
    String? name, {
    _i2.RealtimeChannelConfig? opts = const _i2.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#channel, [name], {#opts: opts}),
            returnValue: _FakeRealtimeChannel_10(
              this,
              Invocation.method(#channel, [name], {#opts: opts}),
            ),
          )
          as _i2.RealtimeChannel);

  @override
  List<_i2.RealtimeChannel> getChannels() =>
      (super.noSuchMethod(
            Invocation.method(#getChannels, []),
            returnValue: <_i2.RealtimeChannel>[],
          )
          as List<_i2.RealtimeChannel>);

  @override
  _i5.Future<String> removeChannel(_i2.RealtimeChannel? channel) =>
      (super.noSuchMethod(
            Invocation.method(#removeChannel, [channel]),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#removeChannel, [channel]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<List<String>> removeAllChannels() =>
      (super.noSuchMethod(
            Invocation.method(#removeAllChannels, []),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
