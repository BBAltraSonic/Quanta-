// Mocks generated by Mockito 5.4.6 from annotations
// in quanta/test/services/avatar_state_sync_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i8;

import 'package:image_picker/image_picker.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:quanta/models/avatar_model.dart' as _i4;
import 'package:quanta/models/user_model.dart' as _i3;
import 'package:quanta/services/auth_service.dart' as _i5;
import 'package:quanta/services/avatar_service.dart' as _i7;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAvatarModel_2 extends _i1.SmartFake implements _i4.AvatarModel {
  _FakeAvatarModel_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i5.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SupabaseClient get supabase =>
      (super.noSuchMethod(
            Invocation.getter(#supabase),
            returnValue: _FakeSupabaseClient_0(
              this,
              Invocation.getter(#supabase),
            ),
          )
          as _i2.SupabaseClient);

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  _i6.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i3.UserModel> signUp({
    required String? email,
    required String? password,
    required String? username,
    String? displayName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #password: password,
              #username: username,
              #displayName: displayName,
            }),
            returnValue: _i6.Future<_i3.UserModel>.value(
              _FakeUserModel_1(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #password: password,
                  #username: username,
                  #displayName: displayName,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.UserModel>);

  @override
  _i6.Future<_i3.UserModel> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i3.UserModel>.value(
              _FakeUserModel_1(
                this,
                Invocation.method(#signIn, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.UserModel>);

  @override
  _i6.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> resetPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [email]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i3.UserModel> updateProfile({
    String? username,
    String? displayName,
    String? profileImageUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #username: username,
              #displayName: displayName,
              #profileImageUrl: profileImageUrl,
            }),
            returnValue: _i6.Future<_i3.UserModel>.value(
              _FakeUserModel_1(
                this,
                Invocation.method(#updateProfile, [], {
                  #username: username,
                  #displayName: displayName,
                  #profileImageUrl: profileImageUrl,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.UserModel>);

  @override
  _i6.Future<bool> hasCompletedOnboarding() =>
      (super.noSuchMethod(
            Invocation.method(#hasCompletedOnboarding, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<void> markOnboardingCompleted() =>
      (super.noSuchMethod(
            Invocation.method(#markOnboardingCompleted, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i3.UserModel?> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i6.Future<_i3.UserModel?>.value(),
          )
          as _i6.Future<_i3.UserModel?>);
}

/// A class which mocks [AvatarService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAvatarService extends _i1.Mock implements _i7.AvatarService {
  MockAvatarService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.AvatarModel?> getUserAvatar([String? userId]) =>
      (super.noSuchMethod(
            Invocation.method(#getUserAvatar, [userId]),
            returnValue: _i6.Future<_i4.AvatarModel?>.value(),
          )
          as _i6.Future<_i4.AvatarModel?>);

  @override
  _i6.Future<_i4.AvatarModel> createAvatar({
    required String? name,
    required String? bio,
    String? backstory,
    required _i4.AvatarNiche? niche,
    required List<_i4.PersonalityTrait>? personalityTraits,
    _i8.File? avatarImage,
    String? voiceStyle,
    bool? allowAutonomousPosting = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createAvatar, [], {
              #name: name,
              #bio: bio,
              #backstory: backstory,
              #niche: niche,
              #personalityTraits: personalityTraits,
              #avatarImage: avatarImage,
              #voiceStyle: voiceStyle,
              #allowAutonomousPosting: allowAutonomousPosting,
            }),
            returnValue: _i6.Future<_i4.AvatarModel>.value(
              _FakeAvatarModel_2(
                this,
                Invocation.method(#createAvatar, [], {
                  #name: name,
                  #bio: bio,
                  #backstory: backstory,
                  #niche: niche,
                  #personalityTraits: personalityTraits,
                  #avatarImage: avatarImage,
                  #voiceStyle: voiceStyle,
                  #allowAutonomousPosting: allowAutonomousPosting,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.AvatarModel>);

  @override
  _i6.Future<_i4.AvatarModel> updateAvatar({
    required String? avatarId,
    String? name,
    String? bio,
    String? backstory,
    _i4.AvatarNiche? niche,
    List<_i4.PersonalityTrait>? personalityTraits,
    _i8.File? newAvatarImage,
    String? voiceStyle,
    bool? allowAutonomousPosting,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateAvatar, [], {
              #avatarId: avatarId,
              #name: name,
              #bio: bio,
              #backstory: backstory,
              #niche: niche,
              #personalityTraits: personalityTraits,
              #newAvatarImage: newAvatarImage,
              #voiceStyle: voiceStyle,
              #allowAutonomousPosting: allowAutonomousPosting,
            }),
            returnValue: _i6.Future<_i4.AvatarModel>.value(
              _FakeAvatarModel_2(
                this,
                Invocation.method(#updateAvatar, [], {
                  #avatarId: avatarId,
                  #name: name,
                  #bio: bio,
                  #backstory: backstory,
                  #niche: niche,
                  #personalityTraits: personalityTraits,
                  #newAvatarImage: newAvatarImage,
                  #voiceStyle: voiceStyle,
                  #allowAutonomousPosting: allowAutonomousPosting,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.AvatarModel>);

  @override
  _i6.Future<_i4.AvatarModel?> getAvatarById(String? avatarId) =>
      (super.noSuchMethod(
            Invocation.method(#getAvatarById, [avatarId]),
            returnValue: _i6.Future<_i4.AvatarModel?>.value(),
          )
          as _i6.Future<_i4.AvatarModel?>);

  @override
  _i6.Future<void> deleteAvatar(String? avatarId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAvatar, [avatarId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i4.AvatarModel>> getTrendingAvatars({int? limit = 20}) =>
      (super.noSuchMethod(
            Invocation.method(#getTrendingAvatars, [], {#limit: limit}),
            returnValue: _i6.Future<List<_i4.AvatarModel>>.value(
              <_i4.AvatarModel>[],
            ),
          )
          as _i6.Future<List<_i4.AvatarModel>>);

  @override
  _i6.Future<List<_i4.AvatarModel>> searchAvatars({
    String? query,
    _i4.AvatarNiche? niche,
    List<_i4.PersonalityTrait>? traits,
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchAvatars, [], {
              #query: query,
              #niche: niche,
              #traits: traits,
              #limit: limit,
              #offset: offset,
            }),
            returnValue: _i6.Future<List<_i4.AvatarModel>>.value(
              <_i4.AvatarModel>[],
            ),
          )
          as _i6.Future<List<_i4.AvatarModel>>);

  @override
  _i6.Future<_i8.File?> pickAvatarImage({
    _i9.ImageSource? source = _i9.ImageSource.gallery,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pickAvatarImage, [], {#source: source}),
            returnValue: _i6.Future<_i8.File?>.value(),
          )
          as _i6.Future<_i8.File?>);

  @override
  _i6.Future<_i4.AvatarModel?> getAvatar(String? avatarId) =>
      (super.noSuchMethod(
            Invocation.method(#getAvatar, [avatarId]),
            returnValue: _i6.Future<_i4.AvatarModel?>.value(),
          )
          as _i6.Future<_i4.AvatarModel?>);

  @override
  _i6.Future<List<_i4.AvatarModel>> getUserAvatars([String? userId]) =>
      (super.noSuchMethod(
            Invocation.method(#getUserAvatars, [userId]),
            returnValue: _i6.Future<List<_i4.AvatarModel>>.value(
              <_i4.AvatarModel>[],
            ),
          )
          as _i6.Future<List<_i4.AvatarModel>>);
}
